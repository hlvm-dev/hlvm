#!/bin/bash
# Embed model bundle as base64 in TypeScript source

set -e

echo "📦 Embedding model into source code..."

# Check if model bundle exists
if [ ! -f "resources/model-bundle.tar.gz" ]; then
    echo "❌ Model bundle not found. Run ./scripts/bundle-model.sh first"
    exit 1
fi

# Convert to base64 and create TypeScript module
cat > src/embedded-model.ts << 'EOF'
// Auto-generated embedded model data
// DO NOT EDIT - Generated by scripts/embed-model.sh

export const MODEL_BUNDLE_BASE64 = `
EOF

# Add base64 data (macOS compatible)
base64 -i resources/model-bundle.tar.gz >> src/embedded-model.ts

# Close the template string
cat >> src/embedded-model.ts << 'EOF'
`;

export function getModelBundle(): Uint8Array {
  // Decode base64 to binary
  const binaryString = atob(MODEL_BUNDLE_BASE64.replace(/\s/g, ''));
  const bytes = new Uint8Array(binaryString.length);
  for (let i = 0; i < binaryString.length; i++) {
    bytes[i] = binaryString.charCodeAt(i);
  }
  return bytes;
}
EOF

SIZE=$(ls -lh src/embedded-model.ts | awk '{print $5}')
echo "✅ Model embedded in source: src/embedded-model.ts ($SIZE)"